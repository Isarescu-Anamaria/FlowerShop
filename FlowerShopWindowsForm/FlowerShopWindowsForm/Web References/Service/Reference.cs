//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FlowerShopWindowsForm.Service {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlowerNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplyNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlowerColorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplyMaterialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FlowerQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SupplyQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FlowerUnitPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SupplyUnitPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBouquetsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBouquetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBouquetNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFlowerStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupplyStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::FlowerShopWindowsForm.Properties.Settings.Default.FlowerShopWindowsForm_Service_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetFlowerNamesCompletedEventHandler GetFlowerNamesCompleted;
        
        /// <remarks/>
        public event GetSupplyNamesCompletedEventHandler GetSupplyNamesCompleted;
        
        /// <remarks/>
        public event GetFlowerColorsCompletedEventHandler GetFlowerColorsCompleted;
        
        /// <remarks/>
        public event GetSupplyMaterialsCompletedEventHandler GetSupplyMaterialsCompleted;
        
        /// <remarks/>
        public event FlowerQuantityCompletedEventHandler FlowerQuantityCompleted;
        
        /// <remarks/>
        public event SupplyQuantityCompletedEventHandler SupplyQuantityCompleted;
        
        /// <remarks/>
        public event FlowerUnitPriceCompletedEventHandler FlowerUnitPriceCompleted;
        
        /// <remarks/>
        public event SupplyUnitPriceCompletedEventHandler SupplyUnitPriceCompleted;
        
        /// <remarks/>
        public event GetBouquetsDataSetCompletedEventHandler GetBouquetsDataSetCompleted;
        
        /// <remarks/>
        public event InsertBouquetCompletedEventHandler InsertBouquetCompleted;
        
        /// <remarks/>
        public event UpdateBouquetNameCompletedEventHandler UpdateBouquetNameCompleted;
        
        /// <remarks/>
        public event UpdateFlowerStockCompletedEventHandler UpdateFlowerStockCompleted;
        
        /// <remarks/>
        public event UpdateSupplyStockCompletedEventHandler UpdateSupplyStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlowerNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFlowerNames() {
            object[] results = this.Invoke("GetFlowerNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFlowerNamesAsync() {
            this.GetFlowerNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetFlowerNamesAsync(object userState) {
            if ((this.GetFlowerNamesOperationCompleted == null)) {
                this.GetFlowerNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlowerNamesOperationCompleted);
            }
            this.InvokeAsync("GetFlowerNames", new object[0], this.GetFlowerNamesOperationCompleted, userState);
        }
        
        private void OnGetFlowerNamesOperationCompleted(object arg) {
            if ((this.GetFlowerNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlowerNamesCompleted(this, new GetFlowerNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplyNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSupplyNames() {
            object[] results = this.Invoke("GetSupplyNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplyNamesAsync() {
            this.GetSupplyNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetSupplyNamesAsync(object userState) {
            if ((this.GetSupplyNamesOperationCompleted == null)) {
                this.GetSupplyNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplyNamesOperationCompleted);
            }
            this.InvokeAsync("GetSupplyNames", new object[0], this.GetSupplyNamesOperationCompleted, userState);
        }
        
        private void OnGetSupplyNamesOperationCompleted(object arg) {
            if ((this.GetSupplyNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplyNamesCompleted(this, new GetSupplyNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlowerColors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFlowerColors() {
            object[] results = this.Invoke("GetFlowerColors", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFlowerColorsAsync() {
            this.GetFlowerColorsAsync(null);
        }
        
        /// <remarks/>
        public void GetFlowerColorsAsync(object userState) {
            if ((this.GetFlowerColorsOperationCompleted == null)) {
                this.GetFlowerColorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlowerColorsOperationCompleted);
            }
            this.InvokeAsync("GetFlowerColors", new object[0], this.GetFlowerColorsOperationCompleted, userState);
        }
        
        private void OnGetFlowerColorsOperationCompleted(object arg) {
            if ((this.GetFlowerColorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlowerColorsCompleted(this, new GetFlowerColorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplyMaterials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSupplyMaterials() {
            object[] results = this.Invoke("GetSupplyMaterials", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplyMaterialsAsync() {
            this.GetSupplyMaterialsAsync(null);
        }
        
        /// <remarks/>
        public void GetSupplyMaterialsAsync(object userState) {
            if ((this.GetSupplyMaterialsOperationCompleted == null)) {
                this.GetSupplyMaterialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplyMaterialsOperationCompleted);
            }
            this.InvokeAsync("GetSupplyMaterials", new object[0], this.GetSupplyMaterialsOperationCompleted, userState);
        }
        
        private void OnGetSupplyMaterialsOperationCompleted(object arg) {
            if ((this.GetSupplyMaterialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplyMaterialsCompleted(this, new GetSupplyMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FlowerQuantity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FlowerQuantity(string flowerName, string flowerColor) {
            object[] results = this.Invoke("FlowerQuantity", new object[] {
                        flowerName,
                        flowerColor});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FlowerQuantityAsync(string flowerName, string flowerColor) {
            this.FlowerQuantityAsync(flowerName, flowerColor, null);
        }
        
        /// <remarks/>
        public void FlowerQuantityAsync(string flowerName, string flowerColor, object userState) {
            if ((this.FlowerQuantityOperationCompleted == null)) {
                this.FlowerQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlowerQuantityOperationCompleted);
            }
            this.InvokeAsync("FlowerQuantity", new object[] {
                        flowerName,
                        flowerColor}, this.FlowerQuantityOperationCompleted, userState);
        }
        
        private void OnFlowerQuantityOperationCompleted(object arg) {
            if ((this.FlowerQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlowerQuantityCompleted(this, new FlowerQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SupplyQuantity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SupplyQuantity(string supplyName, string supplyMaterial) {
            object[] results = this.Invoke("SupplyQuantity", new object[] {
                        supplyName,
                        supplyMaterial});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SupplyQuantityAsync(string supplyName, string supplyMaterial) {
            this.SupplyQuantityAsync(supplyName, supplyMaterial, null);
        }
        
        /// <remarks/>
        public void SupplyQuantityAsync(string supplyName, string supplyMaterial, object userState) {
            if ((this.SupplyQuantityOperationCompleted == null)) {
                this.SupplyQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupplyQuantityOperationCompleted);
            }
            this.InvokeAsync("SupplyQuantity", new object[] {
                        supplyName,
                        supplyMaterial}, this.SupplyQuantityOperationCompleted, userState);
        }
        
        private void OnSupplyQuantityOperationCompleted(object arg) {
            if ((this.SupplyQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SupplyQuantityCompleted(this, new SupplyQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FlowerUnitPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double FlowerUnitPrice(string flowerName, string flowerColor) {
            object[] results = this.Invoke("FlowerUnitPrice", new object[] {
                        flowerName,
                        flowerColor});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void FlowerUnitPriceAsync(string flowerName, string flowerColor) {
            this.FlowerUnitPriceAsync(flowerName, flowerColor, null);
        }
        
        /// <remarks/>
        public void FlowerUnitPriceAsync(string flowerName, string flowerColor, object userState) {
            if ((this.FlowerUnitPriceOperationCompleted == null)) {
                this.FlowerUnitPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlowerUnitPriceOperationCompleted);
            }
            this.InvokeAsync("FlowerUnitPrice", new object[] {
                        flowerName,
                        flowerColor}, this.FlowerUnitPriceOperationCompleted, userState);
        }
        
        private void OnFlowerUnitPriceOperationCompleted(object arg) {
            if ((this.FlowerUnitPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlowerUnitPriceCompleted(this, new FlowerUnitPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SupplyUnitPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double SupplyUnitPrice(string supplyName, string supplyMaterial) {
            object[] results = this.Invoke("SupplyUnitPrice", new object[] {
                        supplyName,
                        supplyMaterial});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void SupplyUnitPriceAsync(string supplyName, string supplyMaterial) {
            this.SupplyUnitPriceAsync(supplyName, supplyMaterial, null);
        }
        
        /// <remarks/>
        public void SupplyUnitPriceAsync(string supplyName, string supplyMaterial, object userState) {
            if ((this.SupplyUnitPriceOperationCompleted == null)) {
                this.SupplyUnitPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupplyUnitPriceOperationCompleted);
            }
            this.InvokeAsync("SupplyUnitPrice", new object[] {
                        supplyName,
                        supplyMaterial}, this.SupplyUnitPriceOperationCompleted, userState);
        }
        
        private void OnSupplyUnitPriceOperationCompleted(object arg) {
            if ((this.SupplyUnitPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SupplyUnitPriceCompleted(this, new SupplyUnitPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBouquetsDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBouquetsDataSet() {
            object[] results = this.Invoke("GetBouquetsDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBouquetsDataSetAsync() {
            this.GetBouquetsDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetBouquetsDataSetAsync(object userState) {
            if ((this.GetBouquetsDataSetOperationCompleted == null)) {
                this.GetBouquetsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBouquetsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetBouquetsDataSet", new object[0], this.GetBouquetsDataSetOperationCompleted, userState);
        }
        
        private void OnGetBouquetsDataSetOperationCompleted(object arg) {
            if ((this.GetBouquetsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBouquetsDataSetCompleted(this, new GetBouquetsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBouquet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertBouquet(string bouquetName, double totalPrice) {
            object[] results = this.Invoke("InsertBouquet", new object[] {
                        bouquetName,
                        totalPrice});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBouquetAsync(string bouquetName, double totalPrice) {
            this.InsertBouquetAsync(bouquetName, totalPrice, null);
        }
        
        /// <remarks/>
        public void InsertBouquetAsync(string bouquetName, double totalPrice, object userState) {
            if ((this.InsertBouquetOperationCompleted == null)) {
                this.InsertBouquetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBouquetOperationCompleted);
            }
            this.InvokeAsync("InsertBouquet", new object[] {
                        bouquetName,
                        totalPrice}, this.InsertBouquetOperationCompleted, userState);
        }
        
        private void OnInsertBouquetOperationCompleted(object arg) {
            if ((this.InsertBouquetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBouquetCompleted(this, new InsertBouquetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBouquetName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBouquetName(string oldName, string newName) {
            this.Invoke("UpdateBouquetName", new object[] {
                        oldName,
                        newName});
        }
        
        /// <remarks/>
        public void UpdateBouquetNameAsync(string oldName, string newName) {
            this.UpdateBouquetNameAsync(oldName, newName, null);
        }
        
        /// <remarks/>
        public void UpdateBouquetNameAsync(string oldName, string newName, object userState) {
            if ((this.UpdateBouquetNameOperationCompleted == null)) {
                this.UpdateBouquetNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBouquetNameOperationCompleted);
            }
            this.InvokeAsync("UpdateBouquetName", new object[] {
                        oldName,
                        newName}, this.UpdateBouquetNameOperationCompleted, userState);
        }
        
        private void OnUpdateBouquetNameOperationCompleted(object arg) {
            if ((this.UpdateBouquetNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBouquetNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFlowerStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFlowerStock(string flowerName, string flowerColor, int quantity) {
            this.Invoke("UpdateFlowerStock", new object[] {
                        flowerName,
                        flowerColor,
                        quantity});
        }
        
        /// <remarks/>
        public void UpdateFlowerStockAsync(string flowerName, string flowerColor, int quantity) {
            this.UpdateFlowerStockAsync(flowerName, flowerColor, quantity, null);
        }
        
        /// <remarks/>
        public void UpdateFlowerStockAsync(string flowerName, string flowerColor, int quantity, object userState) {
            if ((this.UpdateFlowerStockOperationCompleted == null)) {
                this.UpdateFlowerStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFlowerStockOperationCompleted);
            }
            this.InvokeAsync("UpdateFlowerStock", new object[] {
                        flowerName,
                        flowerColor,
                        quantity}, this.UpdateFlowerStockOperationCompleted, userState);
        }
        
        private void OnUpdateFlowerStockOperationCompleted(object arg) {
            if ((this.UpdateFlowerStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFlowerStockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupplyStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSupplyStock(string supplyName, string supplyMaterial, int quantity) {
            this.Invoke("UpdateSupplyStock", new object[] {
                        supplyName,
                        supplyMaterial,
                        quantity});
        }
        
        /// <remarks/>
        public void UpdateSupplyStockAsync(string supplyName, string supplyMaterial, int quantity) {
            this.UpdateSupplyStockAsync(supplyName, supplyMaterial, quantity, null);
        }
        
        /// <remarks/>
        public void UpdateSupplyStockAsync(string supplyName, string supplyMaterial, int quantity, object userState) {
            if ((this.UpdateSupplyStockOperationCompleted == null)) {
                this.UpdateSupplyStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupplyStockOperationCompleted);
            }
            this.InvokeAsync("UpdateSupplyStock", new object[] {
                        supplyName,
                        supplyMaterial,
                        quantity}, this.UpdateSupplyStockOperationCompleted, userState);
        }
        
        private void OnUpdateSupplyStockOperationCompleted(object arg) {
            if ((this.UpdateSupplyStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupplyStockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetFlowerNamesCompletedEventHandler(object sender, GetFlowerNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlowerNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlowerNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetSupplyNamesCompletedEventHandler(object sender, GetSupplyNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplyNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplyNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetFlowerColorsCompletedEventHandler(object sender, GetFlowerColorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlowerColorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlowerColorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetSupplyMaterialsCompletedEventHandler(object sender, GetSupplyMaterialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplyMaterialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplyMaterialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FlowerQuantityCompletedEventHandler(object sender, FlowerQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlowerQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FlowerQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SupplyQuantityCompletedEventHandler(object sender, SupplyQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SupplyQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SupplyQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FlowerUnitPriceCompletedEventHandler(object sender, FlowerUnitPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlowerUnitPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FlowerUnitPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SupplyUnitPriceCompletedEventHandler(object sender, SupplyUnitPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SupplyUnitPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SupplyUnitPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetBouquetsDataSetCompletedEventHandler(object sender, GetBouquetsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBouquetsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBouquetsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InsertBouquetCompletedEventHandler(object sender, InsertBouquetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBouquetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBouquetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateBouquetNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateFlowerStockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateSupplyStockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591